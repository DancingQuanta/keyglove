// Keyglove controller source code - KGAPI "pressure" protocol command parser declarations
// 2014-11-28 by Jeff Rowberg <jeff@rowberg.net>

/* ============================================
Controller code is placed under the MIT license
Copyright (c) 2014 Jeff Rowberg

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
===============================================
*/

/**
 * @file support_protocol_pressure.h
 * @brief KGAPI "pressure" protocol command parser declarations
 * @author Jeff Rowberg
 * @date 2014-11-28
 *
 * This file implements subsystem-specific command processing functions for the
 * "pressure" part of the KGAPI protocol.
 *
 * This file is autogenerated. Normally it is not necessary to edit this file.
 */

#ifndef _SUPPORT_PROTOCOL_PRESSURE_H_
#define _SUPPORT_PROTOCOL_PRESSURE_H_

/* =========================== */
/* KGAPI CONSTANT DECLARATIONS */
/* =========================== */


// -- command/event split --


/* ================================ */
/* KGAPI COMMAND/EVENT DECLARATIONS */
/* ================================ */


// -- command/event split --


uint8_t process_protocol_command_pressure(uint8_t *rxPacket);

#endif // _SUPPORT_PROTOCOL_PRESSURE_H_
